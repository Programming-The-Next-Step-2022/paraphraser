setwd("~/Documents/GitHub/project_margarida")
setwd("~/Documents/GitHub/project_margarida/paraphraser")
package.skeleton(name="translator")
package.skeleton(name=translator, code_files="main.R")
package.skeleton(name="translator", code_files="main.R")
devtools::load_all("~/Documents/GitHub/project_margarida")
use_description()
devtools::install_deps()
??use_description()
usethis::use_description()
usethis::use_description(check_name=FALSE)
setwd("~/Documents/GitHub/project_margarida")
create_package()
??create_package()
devtools::document()
library(project.margarida)
translate(input_text="Hello", target_language="PT-PT", formal="less")
library(project.margarida)
translate(input_text="Hello", target_language="PT-PT", formal="less")
?translate
??translate
?project.margarida::translate
is.numeric(5)
is.numeric(5"e")
is.numeric("e")
is.number(5)
assertthat::is.number(5)
library(project.margarida)
translate(input_text="Hello friends", target_language="PT-PT", source_language =NULL, formality="less", preserve_formatting=1)
translate(input_text="Hello friends", target_language="PT-PT", source_language ="EN", formality="less", preserve_formatting=1)
translate(input_text="Hello friends", target_language="PT-PT", source_language ="EN", formal="less", preserve_formatting=1)
split_arguments <- c(0, 1, "nonewlines")
split_arguments
split_sentences = 1
split_sentences %in% split_arguments
split_sentences = "1"
split_sentences %in% split_arguments
split_sentences = 0
split_sentences %in% split_arguments
split_sentences = 3
split_sentences %in% split_arguments
split_sentences = "nonewlines"
split_sentences %in% split_arguments
formatting_arguments <- c(0, 1)
preserve_formatting = 1
preserve_formatting %in% formatting_arguments
preserve_formatting = "1"
preserve_formatting %in% formatting_arguments
preserve_formatting = 3
preserve_formatting %in% formatting_arguments
is.character("f")
is.character("falling. hgoeng ens fneog.)
is.character("falling. hgoeng ens fneog.")
split_sentences = "hello world"
if(!is.numeric(split_sentences) | !is.character(split_sentences))
print("no")
else
print("yes")
#stop("Argument
split_sentences = "ghbg fjkdgk"
if(!is.numeric(split_sentences) | !is.character(split_sentences))
print("no")
else
print("yes")
split_sentences = 45
if(!is.numeric(split_sentences) | !is.character(split_sentences))
print("no")
else
print("yes")
split_sentences = "34"
if(!is.numeric(split_sentences) | !is.character(split_sentences))
print("no")
else
print("yes")
split_sentences = TRUE
if(!is.numeric(split_sentences) | !is.character(split_sentences))
print("no")
else
print("yes")
if(!is.numeric(split_sentences) && !is.character(split_sentences))
print("no")
else
print("yes")
typeof(split_sentences)
if(!is.numeric(split_sentences) && !is.character(split_sentences))
print("no")
else
print("yes")
if(!is.numeric(split_sentences) && !is.character(split_sentences))
print("no")
split_sentences = "TRUE"
if(!is.numeric(split_sentences) && !is.character(split_sentences))
print("no")
split_sentences = 34
if(!is.numeric(split_sentences) && !is.character(split_sentences))
print("no")
split_sentences = FALSE
if(!is.numeric(split_sentences) && !is.character(split_sentences))
print("no")
output_text <- "hello"
source_language <- "EN"
c <- c(output_text, source_language)
c
c$output_text
c <- list(output_text, source_language)
c
c$output_text
library(project.margarida)
translate("text", "PT-PT", formality = "less", preserve_formatting = 1)
library(project.margarida)
translate("text", "PT-PT", formality = "less", preserve_formatting = 1)
library(project.margarida)
translate("text", "PT-PT", formality = "less", preserve_formatting = 1)
devtools::document()
devtools::document()
devtools::document()
usethis::use_vignette("my-vignette")
library(project.margarida)
translate(input_text = "Hello world!", target_language = "RU")
runApp('R')
runApp('R')
runApp('R')
![User Interface](/Users/margaridamoreirasilva/Desktop/trial_screenshot.png)
devtools::document()
devtools::document()
devtools::document()
runApp('R')
runApp('R')
input_text <- "hello"
source_language <- "EN"
output_text <- "olá"
target_language <- "PT-PT"
# Create class
output <- list("input text" = input_text,
"source language" = source_language,
"output text" = output_text,
"target language" = target_language)
output
output$`source language`
output$source language
output$"source language"
input_text <- "hello"
source_language <- "EN"
output_text <- "olá"
target_language <- "PT-PT"
# Create class
output <- list('input text' = input_text,
'source language' = source_language,
'output text' = output_text,
'target language' = target_language)
output
output$"source language"
class(output) <- "translation"
output
class(output)
print(output)
library(project.margarida)
translate("Hello friends", "PT-PT")
devtools::document()
?translate
url <- "https://app.plaraphy.com/api/paraphrase?authorization=984|fh0hp1jeCU8kU7q68Sce3n8UizdPxfxWh4I6gFy6"
raw_result <- httr::POST(url, query = list(text = "the reason for it is that i don't like that.",
))
raw_result <- httr::POST(url, query = (text = "the reason for it is that i don't like that.",
))
raw_result <- httr::POST(url, query = list(text = "the reason for it is that i don't like that."
))
raw_result
data <- jsonlite::fromJSON(rawToChar(raw_result$content))
data
url <- "https://app.plaraphy.com/api/paraphrase"
raw_result <- httr::POST(url, query = list(authorization = "984|fh0hp1jeCU8kU7q68Sce3n8UizdPxfxWh4I6gFy6", text = "the reason for it is that i don't like that."))
raw_result
jsonlite::fromJSON(rawToChar(raw_result$content))
raw_result$content
url <- "https://app.plaraphy.com/api/paraphrase?auth_key=984|fh0hp1jeCU8kU7q68Sce3n8UizdPxfxWh4I6gFy6"
raw_result <- httr::POST(url, query =(text = "the reason for it is that i don't like that."))
raw_result <- httr::POST(url, query =list(text = "the reason for it is that i don't like that."))
raw_result
raw_result <- httr::POST(url, text = "the reason for it is that i don't like that.")
raw_result
data <- jsonlite::fromJSON(rawToChar(raw_result$content))
data
raw_result <- httr::POST(url, headers={
'accept': 'application/json',
'content-type': 'application/x-www-form-urlencoded',
'authorization': 'Bearer 984|fh0hp1jeCU8kU7q68Sce3n8UizdPxfxWh4I6gFy6',
'cache-control': 'no-cache',
}
library(project.margarida)
